{"ast":null,"code":"var _jsxFileName = \"/Users/ben/Documents/GitHub/babyNamePicker/src/Names.js\";\nimport React from \"react\";\nimport BabyNamesData from \"./BabyNamesData.json\";\n\nconst Names = () => {\n  const sortNames = BabyNamesData.sort((a, b) => a.name > b.name ? 1 : -1);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"names\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, sortNames.map((x, i) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: i,\n      className: x.sex === \"f\" ? \"female\" : \"male\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }\n    }, x.name, \" \", console.log(x));\n  })));\n};\n\nexport default Names;","map":{"version":3,"sources":["/Users/ben/Documents/GitHub/babyNamePicker/src/Names.js"],"names":["React","BabyNamesData","Names","sortNames","sort","a","b","name","map","x","i","sex","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,sBAA1B;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAMC,SAAS,GAAGF,aAAa,CAACG,IAAd,CAAmB,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAX,GAAkB,CAAlB,GAAsB,CAAC,CAArD,CAAlB;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,SAAS,CAACK,GAAV,CAAc,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACvB,wBACE;AAAI,MAAA,GAAG,EAAEA,CAAT;AAAY,MAAA,SAAS,EAAED,CAAC,CAACE,GAAF,KAAU,GAAV,GAAgB,QAAhB,GAA2B,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,CAAC,CAACF,IADL,OACYK,OAAO,CAACC,GAAR,CAAYJ,CAAZ,CADZ,CADF;AAKD,GANA,CADH,CADF,CADF;AAaD,CAhBD;;AAiBA,eAAeP,KAAf","sourcesContent":["import React from \"react\";\nimport BabyNamesData from \"./BabyNamesData.json\";\n\nconst Names = () => {\n  const sortNames = BabyNamesData.sort((a, b) => (a.name > b.name ? 1 : -1));\n\n  return (\n    <div>\n      <ul className=\"names\">\n        {sortNames.map((x, i) => {\n          return (\n            <li key={i} className={x.sex === \"f\" ? \"female\" : \"male\"}>\n              {x.name} {console.log(x)}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\nexport default Names;\n"]},"metadata":{},"sourceType":"module"}